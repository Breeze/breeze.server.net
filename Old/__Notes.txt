Folder organization
  build - the build gulp file and npm dependencies.
  AspNet - has the 'old' implementation of the breeze server for use with ASP.NET
  AspNetCore - has the 'new' implementation of the breeze server for use with ASP.NET CORE
  Tests -  All of the test projects and any dependent EF model projects.
  *.sln files:  These are solutions used for testing.
The AspNet and AspNetCore folders each also contains a '.Build.Sln' file and a 'Nuget.Builds' dir.  These are both used by the build process.  
  

ApiDocs
    Open Command Prompt from Breeze.Client\Scripts\IBlade 
    Run
        yuidoc -t "C:\GitLocal\Breeze\apidoc-theme\breeze" .

Powershell
    Start with an 'admin' security command prompt

    then for each of these powershell executables - they look reversed but they are correct.
        32-bit PowerShell 	C:\Windows\SysWOW64\WindowsPowerShell\v1.0\powershell.exe
        64-bit PowerShell 	C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe

    run
        set-executionpolicy remotesigned
		   

Semantic Versioning:
    see: http://semver.org/

CI
    see: http://about.travis-ci.org/docs/
    
    

Misc Notes:
  1) entityType is on the entity instead of the entityAspect because it is actually on the prototype and is shared by all instances of the type.
  2) Look at knockout js - valueHasMutated for perf.
  4) odata skip will fail against a EF source without an orderBy
  5) id fixup cannot occur with unidirectional navigation
  6) Decided to omit having a 'SetAdded' method. Calling SetAdded on entity with 'identity' key and then saving will 
     create a new entity and will return it in 'unchanged' state and leave original in its 'added' state. 


      





