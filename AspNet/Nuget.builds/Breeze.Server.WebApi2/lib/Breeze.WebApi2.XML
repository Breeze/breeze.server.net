<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Breeze.WebApi2</name>
    </assembly>
    <members>
        <member name="T:Breeze.WebApi2.BreezeControllerAttribute">
            <summary>
            Configure the Web API settings for this Breeze Controller
            </summary>
            <remarks>
            Clears all <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/>s and 
            adds the Breeze formatter for JSON content.
            Removes the competing ASP.NET Web API's QueryFilterProvider if present. 
            Adds <see cref="T:Breeze.WebApi2.EnableBreezeQueryFilterProvider"/> for OData query processing
            Adds <see cref="T:Breeze.WebApi2.MetadataFilterProvider"/> returning a Metadata action filter
            which (by default) converts a Metadata string response to
            an HTTP response with string content.
            </remarks>
        </member>
        <member name="M:Breeze.WebApi2.BreezeControllerAttribute.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
            <summary>
            Initialize the Breeze controller with a single <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> for JSON
            and a single <see cref="T:System.Web.Http.Filters.IFilterProvider"/> for Breeze OData support
            </summary>
        </member>
        <member name="P:Breeze.WebApi2.BreezeControllerAttribute.MaxExpansionDepth">
            <summary>
            Gets or sets max expansion depth at controller level
            </summary>
        </member>
        <member name="P:Breeze.WebApi2.BreezeControllerAttribute.EnsureStableOrdering">
            <summary>
            Gets or sets a value indicating whether query composition should
            alter the original query when necessary to ensure a stable sort order.
            </summary>
            <value>A <c>true</c> value indicates the original query should
            be modified when necessary to guarantee a stable sort order.
            A <c>false</c> value indicates the sort order can be considered
            stable without modifying the query.  Query providers that ensure
            a stable sort order should set this value to <c>false</c>.
            The default value is <c>true</c>.</value>
        </member>
        <member name="P:Breeze.WebApi2.BreezeControllerAttribute.HandleNullPropagation">
            <summary>
            Gets or sets a value indicating how null propagation should
            be handled during query composition. 
            </summary>
            <value>
            The default is <see cref="F:System.Web.Http.OData.Query.HandleNullPropagationOption.Default"/>.
            </value>
        </member>
        <member name="P:Breeze.WebApi2.BreezeControllerAttribute.MaxAnyAllExpressionDepth">
            <summary>
            Gets or sets the maximum depth of the Any or All elements nested inside the query.
            </summary>
            <remarks>
            This limit helps prevent Denial of Service attacks. The default value is 1.
            </remarks>
            <value>
            The maxiumum depth of the Any or All elements nested inside the query.
            </value>
        </member>
        <member name="P:Breeze.WebApi2.BreezeControllerAttribute.PageSize">
            <summary>
            Gets or sets the maximum number of query results to send back to clients.
            </summary>
            <value>
            The maximum number of query results to send back to clients.
            </value>
        </member>
        <member name="M:Breeze.WebApi2.BreezeControllerAttribute.GetQueryableFilterProvider(Breeze.WebApi2.EnableBreezeQueryAttribute)">
            <summary>
            Return the IQueryable <see cref="T:System.Web.Http.Filters.IFilterProvider"/> for a Breeze Controller
            </summary>
            <remarks>
            By default returns an <see cref="T:Breeze.WebApi2.EnableBreezeQueryFilterProvider"/>.
            Override to substitute a custom provider.
            </remarks>
        </member>
        <member name="M:Breeze.WebApi2.BreezeControllerAttribute.GetJsonFormatter">
            <summary>
            Return the Breeze-specific <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter"/> that formats
            content to JSON. This formatter must be tailored to work with Breeze clients. 
            </summary>
            <remarks>
            By default returns the Breeze <see cref="T:Breeze.WebApi2.JsonFormatter"/>.
            Override it to substitute a custom JSON formatter.
            </remarks>
        </member>
        <member name="M:Breeze.WebApi2.BreezeControllerAttribute.GetMetadataFilterProvider(Breeze.WebApi2.MetadataToHttpResponseAttribute)">
            <summary>
            Return the Metadata <see cref="T:System.Web.Http.Filters.IFilterProvider"/> for a Breeze Controller
            </summary>
            <remarks>
            By default returns an <see cref="T:Breeze.WebApi2.MetadataToHttpResponseAttribute"/>.
            Override to substitute a custom provider.
            </remarks>
        </member>
        <member name="T:Breeze.WebApi2.BreezeQueryableAttribute">
            <summary>
            Extend Web API's <see cref="T:System.Web.Http.OData.EnableQueryAttribute"/> for expected Breeze OData-like query support.
            </summary>
            <remarks>
            See http://blogs.msdn.com/b/webdev/archive/2014/03/13/getting-started-with-asp-net-web-api-2-2-for-odata-v4-0.aspx
            </remarks>
        </member>
        <member name="T:Breeze.WebApi2.EnableBreezeQueryAttribute">
            <summary>
            Extend Web API's <see cref="T:System.Web.Http.OData.EnableQueryAttribute"/>
            for expected Breeze OData-like query support.
            </summary>
            <remarks>
            Remember to add it to the Filters for your configuration.
            Automatically added to each IQueryable method when
            you put the [BreezeController] attribute on an ApiController class.
            <para>
            See also http://blogs.msdn.com/b/webdev/archive/2014/03/13/getting-started-with-asp-net-web-api-2-2-for-odata-v4-0.aspx
            </para>
            </remarks>
        </member>
        <member name="M:Breeze.WebApi2.EnableBreezeQueryAttribute.GetQueryHelper(System.Net.Http.HttpRequestMessage)">
            <summary>
            Get the QueryHelper instance for the current request.  We use a single instance per request because
            QueryHelper is stateful, and may preserve state between the ApplyQuery and OnActionExecuted methods.
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.EnableBreezeQueryAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Called when the action is executed.  If the return type is IEnumerable or IQueryable,
            calls OnActionExecuted in the base class, which in turn calls ApplyQuery.
            </summary>
            <param name="actionExecutedContext">The action executed context.</param>
        </member>
        <member name="M:Breeze.WebApi2.EnableBreezeQueryAttribute.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
            <summary>
            All standard OData web api support is handled here (except select and expand).
            This method also handles nested orderby statements the the current ASP.NET web api does not yet support.
            This method is called by base.OnActionExecuted
            </summary>
            <param name="queryable"></param>
            <param name="queryOptions"></param>
            <returns></returns>
        </member>
        <member name="T:Breeze.WebApi2.MetadataToHttpResponseAttribute">
            <summary>
            Converts output of a method named "Metadata" that returns a string
            into an HttpResponse with string content.
            </summary>
        </member>
        <member name="M:Breeze.WebApi2.MetadataToHttpResponseAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
            <summary>
            Called when the action is executed.
            </summary>
            <param name="actionExecutedContext">The action executed context.</param>
        </member>
        <member name="T:Breeze.WebApi2.BreezeJsonFormatterAttribute">
            <summary>
            Establish a JsonFormatter configured for Breeze controllers
            </summary> 
            <remarks>
            The Breeze JsonFormatter is the same Newtonsoft-based JsonFormatter
            shipped in the ASP.NET Web Api, 
            configured specifically for Breeze controllers.
            </remarks>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.BeforeApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
            <summary>
            Provide a hook to do any processing before applying the query.  This implementation does nothing.
            </summary>
            <param name="queryable"></param>
            <param name="queryOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.ApplyQuery(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions,System.Web.Http.OData.Query.ODataQuerySettings)">
            <summary>
            Apply the queryOptions to the query.  
            This method handles nested order-by statements the the current ASP.NET web api does not yet support.
            </summary>
            <param name="queryable"></param>
            <param name="queryOptions"></param>
            <param name="querySettings"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.ApplySelect(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
            <summary>
            Apply the select clause to the queryable
            </summary>
            <param name="queryable"></param>
            <param name="selectQueryString"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.ApplyExpand(System.Linq.IQueryable,System.Web.Http.OData.Query.ODataQueryOptions)">
            <summary>
            Apply to expands clause to the queryable
            </summary>
            <param name="queryable"></param>
            <param name="expandsQueryString"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.PostExecuteQuery(System.Collections.IEnumerable)">
            <summary>
            Perform any work after the query is executed.  Does nothing in this implementation but is available to derived classes.
            </summary>
            <param name="queryResult"></param>
            <returns></returns>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.WrapResult(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage,System.Linq.IQueryable)">
            <summary>
            Replaces the response.Content with the query results, wrapped in a QueryResult object if necessary.
            </summary>
            <param name="request"></param>
            <param name="response"></param>
            <param name="responseObject"></param>
            <param name="queryable"></param>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.ConfigureFormatter(System.Net.Http.HttpRequestMessage,System.Linq.IQueryable)">
            <summary>
            Configure the JsonFormatter.  Does nothing in this implementation but is available to derived classes.
            </summary>
            <param name="request">Used to retrieve the current JsonFormatter</param>
            <param name="queryable">Used to obtain the ISession</param>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.ConfigureFormatter(System.Net.Http.Formatting.JsonMediaTypeFormatter,System.Linq.IQueryable)">
            <summary>
            Configure the JsonFormatter.  Does nothing in this implementation but is available to derived classes.
            </summary>
            <param name="jsonFormatter"></param>
            <param name="queryable">Used to obtain the ISession</param>
        </member>
        <member name="M:Breeze.WebApi2.QueryHelper.Close(System.Object)">
            <summary>
            Release any resources associated with this QueryHelper.
            </summary>
            <param name="responseObject">Response payload, which may have associated resources.</param>
        </member>
        <member name="T:Breeze.WebApi2.QueryResult">
            <summary>
            Wrapper for results that have an InlineCount, to support paged result sets.
            </summary>
        </member>
    </members>
</doc>
